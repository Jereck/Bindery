/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BookclubsIndexRouteImport } from './routes/bookclubs.index'
import { Route as BookclubsCreateRouteImport } from './routes/bookclubs.create'
import { Route as BookclubsClubIdRouteImport } from './routes/bookclubs.$clubId'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BookclubsIndexRoute = BookclubsIndexRouteImport.update({
  id: '/bookclubs/',
  path: '/bookclubs/',
  getParentRoute: () => rootRouteImport,
} as any)
const BookclubsCreateRoute = BookclubsCreateRouteImport.update({
  id: '/bookclubs/create',
  path: '/bookclubs/create',
  getParentRoute: () => rootRouteImport,
} as any)
const BookclubsClubIdRoute = BookclubsClubIdRouteImport.update({
  id: '/bookclubs/$clubId',
  path: '/bookclubs/$clubId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/bookclubs/$clubId': typeof BookclubsClubIdRoute
  '/bookclubs/create': typeof BookclubsCreateRoute
  '/bookclubs': typeof BookclubsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/bookclubs/$clubId': typeof BookclubsClubIdRoute
  '/bookclubs/create': typeof BookclubsCreateRoute
  '/bookclubs': typeof BookclubsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/signin': typeof SigninRoute
  '/signup': typeof SignupRoute
  '/bookclubs/$clubId': typeof BookclubsClubIdRoute
  '/bookclubs/create': typeof BookclubsCreateRoute
  '/bookclubs/': typeof BookclubsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/bookclubs/$clubId'
    | '/bookclubs/create'
    | '/bookclubs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/bookclubs/$clubId'
    | '/bookclubs/create'
    | '/bookclubs'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/signin'
    | '/signup'
    | '/bookclubs/$clubId'
    | '/bookclubs/create'
    | '/bookclubs/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  SigninRoute: typeof SigninRoute
  SignupRoute: typeof SignupRoute
  BookclubsClubIdRoute: typeof BookclubsClubIdRoute
  BookclubsCreateRoute: typeof BookclubsCreateRoute
  BookclubsIndexRoute: typeof BookclubsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bookclubs/': {
      id: '/bookclubs/'
      path: '/bookclubs'
      fullPath: '/bookclubs'
      preLoaderRoute: typeof BookclubsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bookclubs/create': {
      id: '/bookclubs/create'
      path: '/bookclubs/create'
      fullPath: '/bookclubs/create'
      preLoaderRoute: typeof BookclubsCreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/bookclubs/$clubId': {
      id: '/bookclubs/$clubId'
      path: '/bookclubs/$clubId'
      fullPath: '/bookclubs/$clubId'
      preLoaderRoute: typeof BookclubsClubIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  SigninRoute: SigninRoute,
  SignupRoute: SignupRoute,
  BookclubsClubIdRoute: BookclubsClubIdRoute,
  BookclubsCreateRoute: BookclubsCreateRoute,
  BookclubsIndexRoute: BookclubsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
